if(NOT LIBUUID_FOUND)
    find_path(LIBUUID_INCLUDE_DIR
        NAMES uuid.h
        PATH_SUFFIXES uuid
    )
    if (LIBUUID_INCLUDE_DIR)
        if (NOT LIBUUID_FIND_QUIETLY)
            message(STATUS "Found libuuid includes: ${LIBUUID_INCLUDE_DIR}")
        endif ()
        set(LIBUUID_INCLUDE_DIRS ${LIBUUID_INCLUDE_DIR})
        check_library_exists(uuid uuid_is_null "" HAVE_LIBUUID_LINUX)
        if (HAVE_LIBUUID_LINUX)
            if (NOT LIBUUID_FIND_QUIETLY)
                message(STATUS "Found libuuid library: ${LIBUUID_LIBRARIES}")
            endif ()
            set(LIBUUID_FOUND ON)
            set(LIBUUID_LIBRARIES uuid)
        else()
            check_library_exists(c uuid_is_nil "" HAVE_LIBUUID_BSD)
            if (HAVE_LIBUUID_BSD)
                set(LIBUUID_FOUND ON)
            elseif (LIBUUID_FIND_REQUIRED)
                message(FATAL_ERROR "Could not find uuid libraries")
            endif()
    endif()
    elseif(LIBUUID_FIND_REQUIRED)
         message(FATAL_ERROR "Could not find uuid development files")
    endif()
endif (NOT LIBUUID_FOUND)

mark_as_advanced(LIBUUID_LIBRARIES LIBUUID_INCLUDE_DIRS)
